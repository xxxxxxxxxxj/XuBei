apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.mob.sdk'
apply plugin: 'com.alibaba.arouter'

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def verCode = 144


android {

    signingConfigs {// 自动化打包配置
        xubeiConfig {
            keyAlias project.KEY_ALIAS
            keyPassword project.KEY_PASSWORD
            storeFile file('../key_xubei.jks')
            storePassword project.STORE_PASSWORD
        }
    }

    /*signingConfigs {
        xubeiConfig {
            keyAlias 'xubei'
            keyPassword 'xubei.com'
            if ("true".equals(IS_JENKINS)) {
                storeFile file('/var/jenkins_home/apps_dir/android/xubei/xubei.jks')
            } else {
                // /Users/xiongj/Documents/xubei.jks
                // C:/xubei.jks
                //storeFile file('C:/xubei.jks')
            }
            storePassword 'xubei.com'
        }
    }*/

    compileSdkVersion 28
    buildToolsVersion '29.0.0 rc2'
    defaultConfig {
        applicationId "com.haohao.zuhaohao"
        minSdkVersion 19
        targetSdkVersion 28
        //versionCode 1
        //versionName "1.0"
        versionCode verCode
        versionName APP_VERSION
        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "cd6a64da3a11560522015af5", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        //ARouter 框架配置
        // 更新 build.gradle, 添加参数 AROUTER_GENERATE_DOC = enable
        // 生成的文档路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        //风味维度 （平台渠道）
        flavorDimensions "channel"//这个名
    }

    //解决第三方分包冲突之类的
    dexOptions {
        javaMaxHeapSize "2g"
        jumboMode true
    }

    //数据绑定框架打开
    dataBinding {
        enabled = true
    }

    //打包出现lintVitalRelease错误
//    lintOptions {
//        checkReleaseBuilds false
//        abortOnError false
//    }

  //  渠道Flavors
    productFlavors {

        xubei_android {
            dimension "channel"
        }

        APP_yimi {
            dimension "channel"
        }

        xiaomi {
            dimension "channel"
        }

        vivo {
            dimension "channel"
        }

        yingyongbao {
            dimension "channel"
        }

        huawei {
            dimension "channel"
        }

        Android_wangxia {
            dimension "channel"
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

//修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            def outDirectory
            //是否为Jenkins打包，输出路径不同
            if ("true".equals(IS_JENKINS)) {
                //Jenkins打包输出到服务器路径
                timeNow = BUILD_TIME
                //BUILD_PATH为服务器输出路径
                outDirectory = BUILD_PATH
                //Xubei-v1.0.1-xiaomi-release.apk
                //newName = 'Xubei-jenkins-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
                newName = 'Xubei-jenkins-v' + APP_VERSION + '-' + variant.buildType.name + '.apk'
                outputFileName = new File("../../../xubei" + '/' + timeNow, newName)
            } else {
                //本机打包输出在本机路径
                timeNow = getDate()
                outDirectory = output.outputFile.getParent()
                if ('debug'.equals(variant.buildType.name)) {
                    newName = "Xubei-v${APP_VERSION}-debug.apk"
                } else {
                    //xubei_v1.0.1_release.apk
                    newName = 'xubei_v' + APP_VERSION + "_" + name + '.apk'
                }
                outputFileName = new File(newName)
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.xubeiConfig
        }
        debug {
            signingConfig signingConfigs.xubeiConfig
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

MobSDK {
    appKey "27f44eaf95377"
    appSecret "8e20fc280e33bb81cb245fec2ef1492d"

    ShareSDK {
        //平台配置信息
        devInfo {
            Wechat {
                sortId 2
                appId "wxcbd032341f7648c3"
                appSecret "87d9a5b91f1302adc4a3851ef720b41c"
                shareByAppClient true
                bypassApproval false
            }
            WechatMoments {
                sortId 1
                appId "wxcbd032341f7648c3"
                appKey "87d9a5b91f1302adc4a3851ef720b41c"
                shareByAppClient true
                bypassApproval false
            }
            QQ {
                sortId 3
                appId "101517487"
                appKey "3010d16c58099f97eeaadf215ab218b4"
                shareByAppClient true
            }
            QZone {
                sortId 4
                appId "101517487"
                appKey "3010d16c58099f97eeaadf215ab218b4"
                shareByAppClient true
            }
        }
    }

}

greendao {
    schemaVersion 2
    daoPackage 'com.haohao.zuhaohao.data.db.gen'
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-beta02', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.0.0'
    implementation 'androidx.media:media:1.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    testImplementation 'junit:junit:4.12'

    //阿里云dns解析
    implementation('com.aliyun.ams:alicloud-android-httpdns:1.+@aar') {
        transitive true
    }

    //解决分包兼容
    implementation 'androidx.multidex:multidex:2.0.1'

    //ARouter路由框架
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    //greenDao数据库
    implementation 'org.greenrobot:greendao:3.2.2'

    //green数据库升级帮助类
    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.1.0'

    //rxJava响应式编程
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    //自动解绑，解决RxJava内存泄漏问题
    implementation 'com.uber.autodispose:autodispose:1.0.0'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.0.0'

    //网络请求框架,添加这个依赖就默认添加了okhttp依赖
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'

    //okhttp log 工具
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    //retrofit2的rxJava2，gson支持
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //google的json解析
    implementation 'com.google.code.gson:gson:2.8.5'

    //dagger2
    implementation 'com.google.dagger:dagger:2.17'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    // implementation 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'com.google.dagger:dagger-android:2.17'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'

    //基于rxJava2的注册绑定对象
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.2.0'

    //事件总线RxBus
    implementation 'com.hwangjr.rxbus:rxbus:2.0.0'

    //工具集
    implementation 'com.blankj:utilcode:1.23.6'

    //RxJava系统权限管理
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //7.0文件共享FileProvider适配
    implementation 'com.zhy.base:fileprovider:1.0.0'

    //viewpager切换
    implementation('com.alibaba.android:ultraviewpager:1.0.7.7@aar') {
        transitive = true
    }

    //一个强大的recyclerView适配器 ，文档见：http://www.jianshu.com/p/b343fcff51b0
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    //增强BottomNavigationView
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.2'

    //下拉刷新框架  1.1.0-alpha-14
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'

    //gif开源控件
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.3'

    //glide图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    // annotationProcessor 'androidx.annotation:annotation:1.0.2'

    //glide图片加载的OkHttp集成库的依赖
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'

    //Glide 的注解和注解解析器的依赖
    implementation 'com.github.bumptech.glide:annotations:4.9.0'

    //图片剪切
    implementation 'com.yalantis:ucrop:2.2.0'

    //二维码扫描
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    //仿iOS的PickerView控件
    implementation 'com.contrarywind:Android-PickerView:4.1.6'

    //日志奔溃收集（腾讯bugly）
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'

    //支付宝
    implementation files('libs/alipaySdk-20170922.jar')

    //腾讯短信验证码
    implementation files('libs/VerifySDK1.0.1.jar')

    //微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.6'

    //友盟统计
    implementation 'com.umeng.sdk:common:1.5.3'
    implementation 'com.umeng.sdk:analytics:7.5.3'

    //基于的 Android WebView
    implementation 'com.just.agentweb:agentweb:4.0.2'

    //tablayout
    implementation 'com.androidkun:XTabLayout:1.1.4'

    //汉字转拼音
    implementation 'com.belerweb:pinyin4j:2.5.1'

    //lottie动画
    implementation 'com.airbnb.android:lottie:2.8.0'

    //极光推送
    implementation 'cn.jiguang.sdk:jpush:3.1.7'
    implementation 'cn.jiguang.sdk:jcore:1.2.6'

    //    //内存泄漏检测

    //    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'

    //    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    //    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    //

    //    // Optional, if you use support library fragments:

    //    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'

    //    testImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
}
